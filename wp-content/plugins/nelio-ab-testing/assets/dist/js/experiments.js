this.nab=this.nab||{},this.nab.experiments=function(e){var t={};function r(n){if(t[n])return t[n].exports;var i=t[n]={i:n,l:!1,exports:{}};return e[n].call(i.exports,i,i.exports,r),i.l=!0,i.exports}return r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var i in e)r.d(n,i,function(t){return e[t]}.bind(null,i));return n},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r(r.s=254)}({0:function(e,t){!function(){e.exports=this.wp.i18n}()},1:function(e,t){!function(){e.exports=this.wp.element}()},2:function(e,t){!function(){e.exports=this.lodash}()},254:function(e,t,r){"use strict";r.r(t);var n={};r.r(n),r.d(n,"getExperimentTypes",(function(){return b})),r.d(n,"getExperimentType",(function(){return y})),r.d(n,"getCategories",(function(){return d})),r.d(n,"getExperimentSupport",(function(){return x})),r.d(n,"hasExperimentSupport",(function(){return O})),r.d(n,"getExperimentView",(function(){return E})),r.d(n,"getHelpString",(function(){return h}));var i={};r.r(i),r.d(i,"addExperimentTypes",(function(){return j})),r.d(i,"removeExperimentTypes",(function(){return v})),r.d(i,"setCategories",(function(){return T})),r.d(i,"updateCategory",(function(){return P}));var o=r(5),s=r(9),c=r.n(s),u=r(2),p=r(0);function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function f(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(r,!0).forEach((function(t){c()(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(r).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}var l=[{slug:"content",title:Object(p._x)("Content Tests","text","nelio-ab-testing")},{slug:"site",title:Object(p._x)("Site Tests","text","nelio-ab-testing")},{slug:"woocommerce",title:Object(p._x)("WooCommerce Tests","text","nelio-ab-testing")}];var m=Object(o.combineReducers)({experimentTypes:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments.length>1?arguments[1]:void 0;switch(t.type){case"ADD_EXPERIMENT_TYPES":return f({},e,{},Object(u.keyBy)(t.experimentTypes,"name"));case"REMOVE_EXPERIMENT_TYPES":return Object(u.omit)(e,t.names)}return e},categories:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:l,t=arguments.length>1?arguments[1]:void 0;switch(t.type){case"SET_CATEGORIES":return t.categories||[];case"UPDATE_CATEGORY":if(!t.category||Object(u.isEmpty)(t.category))return e;if(Object(u.find)(e,["slug",t.slug]))return e.map((function(e){return e.slug===t.slug?f({},e,{},t.category):e}))}return e}}),g=function(e,t){return"string"==typeof t?y(e,t):t};function b(e){return e.experimentTypes}function y(e,t){return e.experimentTypes[t]}function d(e){return e.categories}function x(e,t,r,n){var i=g(e,t);return Object(u.get)(i,["supports",r],n)}function O(e,t,r,n){return!!x(e,t,r,n)}function E(e,t,r){var n=g(e,t);if(n)return n.views[r]}function h(e,t,r){var n=g(e,t);if(n)return n.help[r]}function j(e){return{type:"ADD_EXPERIMENT_TYPES",experimentTypes:Object(u.castArray)(e)}}function v(e){return{type:"REMOVE_EXPERIMENT_TYPES",names:Object(u.castArray)(e)}}function T(e){return{type:"SET_CATEGORIES",categories:e}}function P(e,t){return{type:"UPDATE_CATEGORY",slug:e,category:t}}function w(){return Object(o.select)("nab/experiments").getCategories()}function S(e){Object(o.dispatch)("nab/experiments").setCategories(e)}function _(e,t){Object(o.dispatch)("nab/experiments").updateCategory(e,t)}Object(o.registerStore)("nab/experiments",{reducer:m,selectors:n,actions:i});var C=r(1);function D(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function R(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(t=function(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?D(r,!0).forEach((function(t){c()(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):D(r).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}({supports:{}},t,{name:e}),"nab/heatmap"===e)return Object(o.dispatch)("nab/experiments").addExperimentTypes(t),t;if("string"==typeof e)if(/^[a-z][a-z0-9-]*\/[a-z][a-z0-9-]*$/.test(e))if(Object(o.select)("nab/experiments").getExperimentType(e))console.error("Experiment type “"+e+"” is already registered.");else if("category"in t)if("category"in t&&!Object(u.some)(Object(o.select)("nab/experiments").getCategories(),{slug:t.category}))console.error("The experiment “"+e+"” must have a registered category.");else if("help"in t&&"string"==typeof t.help.original&&"string"==typeof t.help.alternative)if("title"in t&&""!==t.title)if("string"==typeof t.title)if("icon"in t)if((r=t.icon)&&(Object(C.isValidElement)(r)||Object(u.isFunction)(r)||r instanceof C.Component)){var r;if("views"in t&&"original"in t.views&&"alternative"in t.views)return Object(o.dispatch)("nab/experiments").addExperimentTypes(t),t;console.error("The experiment “"+e+"” must specify original and alternative edit views.")}else console.error("The icon passed is invalid. The icon should be an element or a function.");else console.error("The experiment “"+e+"” must have an icon.");else console.error("Experiment titles must be strings.");else console.error("The experiment “"+e+"” must have a title.");else console.error("The experiment “"+e+"” must provide help strings explaining the control version and its variants.");else console.error("The experiment “"+e+"” must have a category.");else console.error("Experiment type names must contain a namespace prefix, include only lowercase alphanumeric characters or dashes, and start with a letter. Example: my-plugin/my-custom-experiment");else console.error("Experiment type names must be strings.")}function A(e){var t=Object(o.select)("nab/experiments").getExperimentType(e);if(t)return Object(o.dispatch)("nab/experiments").removeExperimentTypes(e),t;console.error("Experiment “"+e+"” is not registered.")}function M(e){return Object(o.select)("nab/experiments").getExperimentType(e)}function I(){return Object(o.select)("nab/experiments").getExperimentTypes()}function Y(e,t,r){return Object(o.select)("nab/experiments").getExperimentSupport(e,t,r)}function z(e,t,r){return Object(o.select)("nab/experiments").hasExperimentSupport(e,t,r)}r.d(t,"getCategories",(function(){return w})),r.d(t,"setCategories",(function(){return S})),r.d(t,"updateCategory",(function(){return _})),r.d(t,"registerExperimentType",(function(){return R})),r.d(t,"unregisterExperimentType",(function(){return A})),r.d(t,"getExperimentType",(function(){return M})),r.d(t,"getExperimentTypes",(function(){return I})),r.d(t,"getExperimentSupport",(function(){return Y})),r.d(t,"hasExperimentSupport",(function(){return z}))},5:function(e,t){!function(){e.exports=this.wp.data}()},9:function(e,t){e.exports=function(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}}});